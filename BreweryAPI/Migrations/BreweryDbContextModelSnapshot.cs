// <auto-generated />
using BreweryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BreweryAPI.Migrations
{
    [DbContext(typeof(BreweryDbContext))]
    partial class BreweryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("BreweryAPI.Models.Brewery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Address1")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "address_1");

                    b.Property<string>("Address2")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "address_2");

                    b.Property<string>("Address3")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "address_3");

                    b.Property<string>("BreweryType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "brewery_type");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "city");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "country");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL")
                        .HasAnnotation("Relational:JsonPropertyName", "longitude");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "phone");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "postal_code");

                    b.Property<string>("StateProvince")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "state_province");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "website_url");

                    b.HasKey("Id");

                    b.ToTable("Breweries");
                });
#pragma warning restore 612, 618
        }
    }
}
